{"version":3,"sources":["app.js","components/auth/classic/classicSignin.directive.js","components/util/util.module.js","components/util/util.service.js","components/util/lodash.wrapper.js","components/skuSelector/skuSelector.directive.js","components/oauth-buttons/oauth-buttons.directive.js","components/oauth-buttons/oauth-buttons.controller.js","components/navbar/navbar.directive.js","components/navbar/navbar.controller.js","components/messaging/messaging.service.js","components/images/ssImage.directive.js","components/images/image.service.js","components/footer/footer.directive.js","components/feeds/storeMention.directive.js","components/feeds/mention.directive.js","components/feeds/likeAction.js","components/feeds/comments.directive.js","components/feeds/comments.controller.js","components/features/feature.service.js","components/auth/auth.module.js","components/auth/user.service.js","components/auth/intercomService.js","components/auth/interceptor.service.js","components/auth/auth.service.js","stores/stores.module.js","stores/stores.router.js","stores/stores.controller.js","stores/store.service.js","staff/staff.module.js","staff/staff.service.js","staff/staff.router.js","staff/staff.controller.js","snap-ins/snapIns.module.js","snap-ins/snapIns.service.js","snap-ins/snapIns.router.js","snap-ins/snapIns.controller.js","search/search.module.js","search/searchBox.directive.js","search/search.service.js","search/search.router.js","search/results.controller.js","requests/requests.module.js","requests/requestForm.controller.js","requests/request.service.js","requestFeedback/requestFeedbackLabels.js","requestFeedback/requestFeedback.module.js","requestFeedback/requestFeedbackForm.controller.js","requestFeedback/requestFeedback.service.js","profiles/profiles.module.js","profiles/profile.service.js","profiles/profile.controller.js","products/products.module.js","products/products.router.js","products/product.service.js","products/product.controller.js","notifications/notifications.module.js","notifications/notifications.router.js","notifications/notificationList.controller.js","notifications/notification.service.js","news/news.service.js","news/news.module.js","news/news.router.js","news/news.controller.js","main/public.controller.js","main/main.module.js","main/main.controller.js","main/login.controller.js","main/chooseStaffMemberForm.controller.js","insights/insights.module.js","insights/insight.service.js","insights/dashboard.directive.js","feedback/feedbackLabels.js","feedback/feedback.module.js","feedback/feedbackForm.controller.js","feedback/feedback.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxlBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"local.min.js","sourcesContent":["'use strict';\n\nangular.module('ssNg', [\n    'ssNg.auth',\n    'ssNg.stores',\n    'ssNg.staff',\n    'ssNg.snapIns',\n    'ssNg.news',\n    'ssNg.search',\n    'ssNg.feedback',\n    'ssNg.requests',\n    'ssNg.requestFeedback',\n    'ssNg.products',\n    'ssNg.profiles',\n    'ssNg.insights',\n    'ssNg.notifications',\n    'ngCookies',\n    'ngResource',\n    'ngSanitize',\n    'ui.router',\n    'ui.bootstrap',\n    'validation.match',\n    'angularMoment',\n    'mentio'\n])\n    .config(['$urlRouterProvider', '$locationProvider', '$provide', function ($urlRouterProvider, $locationProvider, $provide) {\n        $urlRouterProvider.otherwise('/');\n        $locationProvider.html5Mode(true);\n        $provide.value(\"apiRoot\", '/api');\n\n    }]).run(['Auth', '$state', '$location', '$rootScope', 'staffService', '$window', 'featureService', function (Auth, $state, $location, $rootScope, staffService, $window, featureService) {\n\n    $window.ga('create', 'UA-79858809-1', 'auto');\n\n    $rootScope.$on(\"$stateChangeError\", console.log.bind(console));\n\n    $rootScope.$on('$stateChangeStart', function (event, next, nextParams, current) {\n        if (next.authenticate) {\n            Auth.getStoreAsync().then(function (store) {\n                if (!store || !store.id) {\n                    $state.go('public');\n                    event.preventDefault();\n                } else {\n                    staffService.checkMemberSelected(store);\n                }\n            });\n        }\n    });\n\n    if (featureService.isEnabled('feature_analytics')) {\n        $rootScope.$on('$stateChangeSuccess', function (event) {\n            $window.ga('send', 'pageview', $location.url());\n        });\n    }\n\n}]);\n","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('classicSignin', ClassicSignin);\n    function ClassicSignin() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {},\n            templateUrl: 'components/auth/classic/classicSignin.html',\n            controller: ['Auth', '$window', function (Auth, $window) {\n                var vm = this;\n\n                vm.user = {};\n                vm.errors = {};\n                vm.submitted = false;\n\n                vm.login = function (form) {\n                    vm.submitted = true;\n                    if (!form.$valid) return;\n                    Auth.login(vm.user).then(function (res) {\n                        $window.location.href = '/';\n                    })\n                        .catch(function (e) {\n                            vm.errors.other = e.message;\n                        });\n                };\n            }]\n        }\n    }\n})();\n","'use strict';\n\nangular.module('ssNg.util', []);\n","'use strict';\n\n(function() {\n\n/**\n * The Util service is for thin, globally reusable, utility functions\n */\nfunction UtilService($window) {\n  var Util = {\n    /**\n     * Return a callback or noop function\n     *\n     * @param  {Function|*} cb - a 'potential' function\n     * @return {Function}\n     */\n    safeCb: function(cb) {\n      return (angular.isFunction(cb)) ? cb : angular.noop;\n    },\n\n    /**\n     * Parse a given url with the use of an anchor element\n     *\n     * @param  {String} url - the url to parse\n     * @return {Object}     - the parsed url, anchor element\n     */\n    urlParse: function(url) {\n      var a = document.createElement('a');\n      a.href = url;\n      return a;\n    },\n\n    /**\n     * Test whether or not a given url is same origin\n     *\n     * @param  {String}           url       - url to test\n     * @param  {String|String[]}  [origins] - additional origins to test against\n     * @return {Boolean}                    - true if url is same origin\n     */\n    isSameOrigin: function(url, origins) {\n      url = Util.urlParse(url);\n      origins = (origins && [].concat(origins)) || [];\n      origins = origins.map(Util.urlParse);\n      origins.push($window.location);\n      origins = origins.filter(function(o) {\n        return url.hostname === o.hostname &&\n          url.port === o.port &&\n          url.protocol === o.protocol;\n      });\n      return (origins.length >= 1);\n    }\n  };\n\n  return Util;\n}\n\nangular.module('ssNg.util')\n  .factory('Util', UtilService);\n\n})();\n","angular.module('ssNg').factory('_', function () {\n    return window._;\n});","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('skuSelector', SkuSelector);\n    function SkuSelector() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                feedback: '=',\n                variations: '=',\n                requestfeedback: '='\n            },\n            templateUrl: 'components/skuSelector/skuSelector.html',\n            controller: ['$scope', function ($scope) {\n                var vm = this;\n\n                vm.allSkus = true;\n\n                if (vm.feedback) {\n\n                    $scope.$watch('vm.allSkus', function () {\n                        if (vm.allSkus) vm.feedback.appliesTo = [];\n                    });\n\n                    vm.feedback.appliesTo = vm.feedback.appliesTo || [];\n\n                    vm.isSelected = function (tag) {\n                        return vm.feedback.appliesTo.indexOf(tag) > -1;\n                    };\n\n                    vm.areSelected = function (tag1, tag2) {\n                        return vm.isSelected(tag1) || vm.isSelected(tag2);\n                    };\n\n                    vm.toggle = function (attribute, tag) {\n                        var indexOf = vm.feedback.appliesTo.indexOf(tag);\n                        if (indexOf > -1) {\n                            vm.feedback.appliesTo.splice(indexOf, 1);\n                        } else {\n                            vm.feedback.appliesTo.push(tag);\n                        }\n                    }\n                }\n                if(vm.requestfeedback){\n                    $scope.$watch('vm.allSkus', function () {\n                        if (vm.allSkus) vm.requestfeedback.appliesTo = [];\n                    });\n\n                    vm.requestfeedback.appliesTo = vm.requestfeedback.appliesTo || [];\n\n                    vm.isSelected = function (tag) {\n                        return vm.requestfeedback.appliesTo.indexOf(tag) > -1;\n                    };\n\n                    vm.areSelected = function (tag1, tag2) {\n                        return vm.isSelected(tag1) || vm.isSelected(tag2);\n                    };\n\n                    vm.toggle = function (attribute, tag) {\n                        var indexOf = vm.requestfeedback.appliesTo.indexOf(tag);\n                        if (indexOf > -1) {\n                            vm.requestfeedback.appliesTo.splice(indexOf, 1);\n                        } else {\n                            vm.requestfeedback.appliesTo.push(tag);\n                        }\n\n                    }\n                }\n            }]\n        }\n    }\n})();","'use strict';\n\nangular.module('ssNg')\n  .directive('oauthButtons', function() {\n    return {\n      templateUrl: 'components/oauth-buttons/oauth-buttons.html',\n      restrict: 'EA',\n      controller: 'OauthButtonsCtrl',\n      controllerAs: 'OauthButtons',\n      scope: {\n        classes: '@'\n      }\n    };\n  });\n","'use strict';\n\nangular.module('ssNg')\n    .controller('OauthButtonsCtrl', ['$window', function ($window) {\n        this.loginOauth = function (provider) {\n            sessionStorage.clear();\n            $window.location.href = '/auth/' + provider;\n        };\n    }]);\n","'use strict';\n\nangular.module('ssNg')\n  .directive('navbar', function () {\n    return {\n    templateUrl: 'components/navbar/navbar.html',\n    restrict: 'E',\n    controller: 'NavbarController',\n    controllerAs: 'nav'\n  }});\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg')\n        .controller('NavbarController', ['Auth', 'staffService', '$window', 'notificationService', NavbarController]);\n\n    function NavbarController(Auth, staffService, $window, notificationService) {\n\n        var that = this;\n\n        this.isLoggedIn = Auth.isLoggedIn;\n        this.isAdmin = Auth.isAdmin;\n        this.getCurrentUser = Auth.getCurrentUser;\n\n        this.getUnreadCount = function(){\n            return notificationService.getUnread().length;\n        };\n\n        this.menu = [];\n\n        this.signOut = function () {\n            Auth.logout();\n        };\n\n        this.hasStaff = function () {\n            if (!Auth.getCurrentUser().staff) return false;\n            return Auth.getCurrentUser().staff.length > 0\n        };\n\n        this.getStaffMember = staffService.getCurrentStaffMember;\n\n        this.openMemberSelector = staffService.openMemberSelector;\n\n        this.signIn = function () {\n            $window.location.href = '/auth/google';\n        }\n    }\n\n})();\n","angular.module('ssNg').factory('messaging', ['$window', function ($window) {\n\n    function Messaging(){\n        // this.client = window.PUBNUB.init({\n        //     ssl: true,\n        //     subscribe_key: 'sub-c-0777862a-17ea-11e6-b700-0619f8945a4f',\n        //     error: function (error) {\n        //         console.log('Error:', error);\n        //     }\n        // });\n    }\n\n    /**\n     * @param entityType\n     * @param eventName created|updated|deleted\n     * @returns {*}\n     */\n    Messaging.prototype.getChannelKey  = function(entityType, eventName, recipientId){\n        var key = 'channel:' + getHost() + ':' + entityType + ':' + eventName;\n        if(recipientId) key += ':' + recipientId;\n        return key;\n    };\n\n    return new Messaging();\n\n    function getHost(){\n        return $window.location.protocol + \"//\" + $window.location.hostname  +\n            (window.location.port ? ':' + $window.location.port : '');\n    }\n}]);","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('ssImage', Image);\n    function Image() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                src : '=',\n                height : '=',\n                width : '=',\n                class : '=',\n            },\n            templateUrl: 'components/images/ssImage.html',\n            controller : ['imageService', function(imageService){\n                var vm = this;\n                vm.getFullImageUrl = function(){\n                    return vm.src ? imageService.getUrl(vm.src) : '';\n                }\n            }]\n        }\n    }\n})();","angular.module('ssNg').factory('imageService', ['Auth', function (Auth) {\n\n    var productUrlPrefix = null;\n\n    function ImageService(){\n        Auth.getStoreAsync().then(function(res){\n            productUrlPrefix = res.organisation.productUrlPrefix;\n        })\n    }\n\n    /**\n     * @param image\n     * @returns {*}\n     */\n    ImageService.prototype.getUrl  = function(image){\n        if(!productUrlPrefix) return null;\n        return productUrlPrefix + image;\n    };\n\n    return new ImageService();\n\n}]);","'use strict';\n\nangular.module('ssNg')\n  .directive('footer', function () {\n    return {\n      templateUrl: 'components/footer/footer.html',\n      restrict: 'E',\n      link: function(scope, element) {\n        element.addClass('footer');\n      }\n    };\n  });\n","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('storeMention', Mention);\n    function Mention() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                store : '='\n            },\n            template: '<span class=\"store-mention\">{{ vm.getShortName(vm.store) }}</span>',\n            controller : ['storeService', function(storeService){\n                var vm = this;\n                vm.getShortName = storeService.getShortName;\n            }]\n        }\n    }\n})();","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('mention', Mention);\n    function Mention() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                isSubject : '=',\n                staffMember : '='\n            },\n            templateUrl: 'components/feeds/mention.html',\n            controller : [function(){\n                var vm = this;\n            }]\n        }\n    }\n})();","angular.module('ssNg').directive('likeAction', [ 'staffService', '_', 'newsService', function(staffService, _, newsService){\n\n    return {\n        restrict: 'E',\n        templateUrl: 'components/feeds/likeAction.html',\n        controllerAs: 'vm',\n        bindToController: {\n            activity : '=',\n            spotId : '='\n        },\n        controller: function(){\n\n            var vm = this;\n\n            vm.likeFeedItem = function(){\n                vm.activity.likes = vm.activity.likes || [];\n                vm.activity.likes.push(staffService.getCurrentStaffMember().id);\n                newsService.like(vm.activity.id);\n            };\n\n            vm.unLikeFeedItem = function(){\n                vm.activity.likes = vm.activity.likes || [];\n                var index = vm.activity.likes.indexOf(staffService.getCurrentStaffMember().id);\n                if(index > -1){\n                    newsService.like(vm.activity.id);\n                    vm.activity.likes.splice(index, 1);\n                }\n            };\n\n            vm.likedByYou = function(){\n                if(!vm.activity) return false;\n                vm.activity.likes = vm.activity.likes || [];\n                var id = staffService.getCurrentStaffMember().id;\n                return vm.activity.likes.indexOf(id) > -1;\n            };\n\n        }\n    }\n} ]);\n","'use strict';\n\nangular.module('ssNg')\n    .directive('comments', function () {\n        return {\n            restrict: 'E',\n            scope:  {},\n            controller: 'CommentsController',\n            controllerAs: 'vm',\n            bindToController: {\n                objectId : '=',\n                objectType : '=',\n                recipientId : '='\n            },\n            templateUrl: 'components/feeds/comments.html'\n        }\n    });","angular.module('ssNg').controller('CommentsController', ['$http', '$scope', 'staffService', 'Auth', '_', '$sce', '$location', '$timeout', '$rootScope', '$anchorScroll', function ($http, $scope, staffService, Auth, _, $sce, $location, $timeout, $rootScope, $anchorScroll) {\n\n    var vm = this;\n\n    vm.getStaffMember = staffService.getCurrentStaffMember;\n\n    vm.staff = [];\n\n    function updateStaff() {\n        vm.staff = _.filter(_.map(Auth.getCurrentUser().staff, function (x) {\n            x.label = x.slug;\n            return x;\n        }), function (staff) {\n            return staff.id != staffService.getCurrentStaffMember().id;\n        });\n    }\n\n    updateStaff();\n\n    $rootScope.$on('ss:staffMemberChanged', function () {\n        updateStaff();\n    });\n\n    vm.newComment = null;\n\n    vm.mentions = {};\n\n    vm.comments = [];\n\n    vm.activityReferenceId = $location.search().activityReferenceId;\n\n    $timeout(function () {\n        vm.clearHighlights = true;\n    }, 1000);\n\n    function loadComments() {\n        return $http.get('/api/activity/?direction=asc&objectId=' + vm.objectId).success(function (data) {\n            vm.comments = data;\n            vm.lockCommentForm = false;\n        });\n    }\n\n    $scope.$watch('vm.objectId', function (newValue) {\n        if (newValue) {\n            loadComments().then(function () {\n                if (vm.activityReferenceId) {\n                    $location.hash(vm.activityReferenceId);\n                    $anchorScroll();\n                }\n            });\n        }\n    });\n\n    function createPost(text) {\n        var comment = {\n            id: 'pending', comment: text, objectId: vm.objectId, objectType: vm.objectType, store: Auth.getCurrentUser().names[0].text\n        };\n        comment.subject = vm.getStaffMember();\n        comment.createdAt = new Date().getTime();\n        return comment;\n    }\n\n    vm.addComment = function () {\n        var comment = createPost(vm.newComment);\n        vm.comments.push(comment);\n        vm.lockCommentForm = true;\n        $http.post('/api/activity/comments/', {recipientId: vm.recipientId, comment: comment.comment, objectId: comment.objectId, objectType: comment.objectType, mentions: Object.keys(vm.mentions)}).success(function (data) {\n            vm.comments[vm.comments.length - 1].id = data.id;\n            vm.newComment = null;\n            vm.lockCommentForm = false;\n        })\n    };\n\n    vm.deleteComment = function (id, index) {\n        var confirmed = confirm('Are you sure you want to delete this comment?');\n        if (confirmed) {\n            vm.comments.splice(index, 1);\n            $http.delete('/api/activity/comments/' + id, {}).success(function () {\n            });\n        }\n    };\n\n    vm.vote = function (comment) {\n        var index = comment.votes.indexOf(vm.getStaffMember().id);\n        if (index > -1) {\n            comment.votes.splice(index, 1);\n        } else {\n            comment.votes.push(vm.getStaffMember().id);\n        }\n        $http.put('/api/comments/' + comment.id + '/vote');\n    };\n\n    vm.isVotedFor = function (comment) {\n        if (!comment) return false;\n        return comment.votes.indexOf(vm.getStaffMember()._id) > -1;\n    };\n\n    vm.trySubmit = function ($event) {\n        //Hack to get around mentio not being selected.\n        if (angular.element('mentio-menu').is(':visible')) return;\n        if ($event.keyCode == 13) {\n            vm.addComment()\n        }\n    };\n\n    vm.getMentionText = function (item) {\n        vm.mentions[item.id] = true;\n        return '@' + item.slug;\n    };\n\n    vm.hydrateComment = function (comment) {\n        return $sce.trustAsHtml(comment.comment.replace(/(@(\\S*))/g, '<a href=\"/staff/$2\">@$2</a>'));\n    }\n}\n]);\n","angular.module('ssNg').factory('featureService', ['Auth', '$location', function (Auth, $location) {\n\n    function FeatureService(){\n    }\n\n    var featuresByHost = {\n        'feature_signin_classic' : [ 'test.seekstock.nz', 'seekstock.nz', 'hallensteins.seekstock.nz', '192.168.1.102', 'localhost'],\n        'feature_signin_oauth' : ['test.seekstock.nz', 'localhost'],\n        'feature_analytics' : ['seekstock.nz', 'hallensteins.seekstock.nz']\n    };\n\n    /**\n     * @param feature request|feedback\n     * @returns {*}\n     */\n    FeatureService.prototype.isEnabled  = function(feature){\n        if(featuresByHost[feature]){\n            var host = $location.host();\n            return featuresByHost[feature].indexOf(host) > -1;\n        }\n        var store = Auth.getCurrentUser();\n        if(!store) return false;\n        return !!store.organisation['feature_' + feature];\n    };\n\n    return new FeatureService();\n\n}]);","'use strict';\n\nangular.module('ssNg.auth', [\n  'ssNg.util',\n  'ngCookies',\n  'ui.router'\n])\n  .config(function($httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n  });\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.auth').factory('userService', ['apiRoot', '$http', UserService]);\n\n    function UserService(apiRoot, $http) {\n        var root = apiRoot + '/users/';\n        return {\n            getUser : function() {\n                return $http({ url : root + 'me', method: 'GET' }).then(function(res){\n                    return res.data;\n                })\n            }\n        }\n    }\n})();\n","angular.module('ssNg').factory('intercomService', ['$window', function ($window) {\n    return {\n        setStaffMember: function (staffName, staffId, staffCreated) {\n            $window.Intercom('shutdown');\n            $window.Intercom('boot', {\n                app_id: \"bcv39bcj\",\n                name: staffName,\n                user_id: staffId,\n                created_at: new Date(staffCreated).getTime() / 1000\n            });\n        }\n    }\n}]);","'use strict';\n\n(function () {\n\n    function RequestContextInterceptor($rootScope, $q, $cookies, $injector, Util) {\n        var state;\n        return {\n            request : function(config) {\n                config.headers = config.headers || {};\n                var accessToken = $cookies.get('accessToken');\n                var staffId = sessionStorage.getItem('staffId');\n                if (Util.isSameOrigin(config.url)) {\n                    if(accessToken) config.headers.Authorization = 'Bearer ' + accessToken;\n                    if(staffId) config.headers['x-seekstock-staffId'] = staffId;\n                }\n                return config;\n            },\n\n            // Intercept 401s and redirect you to login\n            responseError: function(response) {\n                if (response.status === 401) {\n                    (state || (state = $injector.get('$state'))).go('public');\n                    // remove any stale tokens\n                    $cookies.remove('accessToken');\n                }\n                return $q.reject(response);\n            }\n        };\n    }\n\n    angular.module('ssNg.auth')\n        .factory('authInterceptor', RequestContextInterceptor);\n\n})();\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.auth').factory('Auth', ['$location', '$http', '$cookies', '$q', 'Util', 'userService', 'staffService', '$rootScope', '$state', AuthService]);\n\n    function AuthService($location, $http, $cookies, $q, Util, userService, staffService, $rootScope, $state) {\n\n        var currentUser = {organisation: {}};\n\n        var cookieName = 'accessToken';\n\n        var currentStoreKey = 'seekstock.nz:currentStoreKey';\n\n        var Auth = {\n            login: function (user) {\n                return $http.post('/auth/local', {\n                    email: user.email,\n                    password: user.password\n                })\n                .then(function (res) {\n                    $cookies.put(cookieName, res.data.accessToken);\n                    return user;\n                })\n                .catch(function(e) {\n                    Auth.logout();\n                    if (e.status === 401) e.data = {message: 'Email or password are incorrect.'};\n                    return $q.reject(e.data);\n                });\n            },\n\n            logout: function () {\n                $cookies.remove(cookieName);\n                sessionStorage.clear();\n                currentUser = {};\n                $state.go('public');\n            },\n\n\n            getCurrentUser: function () {\n                return currentUser;\n            },\n\n            getStoreAsync: function () {\n                return $q(function (resolve, reject) {\n                    if (currentUser.id) resolve(currentUser);\n                    Auth.reLoadUser().then(function (res) {\n                        resolve(res);\n                    })\n                });\n            },\n\n            reLoadUser: function () {\n                if (!Auth.getToken()) return $q(function (resolve, reject) {\n                    resolve(null);\n                });\n                return userService.getUser().then(function (res) {\n                    currentUser = res;\n                    return currentUser;\n                }).catch(function (e) {\n                    return {};\n                })\n            },\n\n            isLoggedIn: function () {\n                if (!currentUser) return false;\n                return !!currentUser.id;\n            },\n\n            /**\n             * Get auth token\n             *\n             * @return {String} - a token string used for authenticating\n             */\n            getToken: function () {\n                return $cookies.get(cookieName);\n            }\n        };\n\n        return Auth;\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.stores', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\nangular.module('ssNg.stores')\n  .config(function($stateProvider) {\n    $stateProvider\n      .state('stores', {\n        url: '/stores',\n        templateUrl: 'stores/stores.html',\n        controller: 'StoresController',\n        controllerAs: 'vm',\n        authenticate: true,\n          parent: 'main'\n    })\n  });\n","'use strict';\n\n(function(){\n\n  angular.module('ssNg.stores').controller('StoresController', ['storeService', '$window', '$location', 'Auth', StoresController]);\n\n  function StoresController(storeService, $window, $location, Auth) {\n\n      var vm = this;\n\n      vm.storeService = storeService;\n\n      vm.rows = {};\n\n      vm.store = null;\n      Auth.getStoreAsync().then(function(res){\n          vm.store = res;\n         listStores();\n      });\n\n      vm.updateStore = function(store){\n          storeService.updateStore({ id : store.id, names : store.names });\n      };\n\n      function listStores() {\n          storeService.listStores({organisationId: vm.store.organisation.id}).then(function (res) {\n              vm.list = res;\n          });\n      }\n  }\n\n})();\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.stores').factory('storeService', ['apiRoot', '$http', '$window', '$rootScope', '$q', StoreService]);\n\n    function StoreService(apiRoot, $http, $window, $rootScope, $q) {\n        var root = apiRoot + '/stores/';\n        return {\n            listStores : function(command){\n                return $http({ url : root, method: 'GET', params : {organisationId : command.organisationId }}).then(function(res){\n                   return res.data;\n                })\n            },\n            createStore : function(command){\n                return $http({ url : root, method: 'POST', data : command }).then(function(res){\n                    return res.data;\n                })\n            },\n            updateStore : function(command){\n                return $http({ url : root + command.id, method: 'PUT', data : command }).then(function(res){\n                    return res.data;\n                })\n            },\n            getShortName : function(store){\n                if(!store || !store.names) return null;\n                var map = {\n                    wellington : 'WGN',\n                    newmarket : 'NMT',\n                    headquarters : 'HQ',\n                    losangeles: 'LA',\n                    melbourne: 'MEL',\n                    seekstock : 'HQ'\n                };\n                var text = store.names[0].text.toLowerCase();\n                return map[text] || text;\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.staff', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.staff').factory('staffService', ['apiRoot', '$http', '$window', '$rootScope', '$q', '$uibModal', '$timeout', 'intercomService', '_', StaffService]);\n\n    function StaffService(apiRoot, $http, $window, $rootScope, $q, $uibModal, $timeout, intercomService, _) {\n        var root = apiRoot + '/staff/';\n        var staffMemberKey = 'seekstock.nz:currentStaffMember';\n\n        return {\n            listStaff: function (command) {\n                return $http({url: root, method: 'GET', params: command}).then(function (res) {\n                    return res.data;\n                })\n            },\n            createStaff: function (command) {\n                return $http({url: root, method: 'POST', data: command}).then(function (res) {\n                    $rootScope.$emit('bagpipes:contextChanged', res);\n                    return res.data;\n                })\n            },\n            deleteStaff: function (command) {\n                return $http({url: root + '/' + command.id, method: 'DELETE'}).then(function (res) {\n                    return res.data;\n                })\n            },\n            clearCurrentStaffMember: function () {\n                sessionStorage.clear();\n            },\n            getCurrentStaffMember: function () {\n                return JSON.parse(sessionStorage.getItem(staffMemberKey)) || {};\n            },\n            setCurrentStaffMember: function (staff) {\n                var data = { previous : this.getCurrentStaffMember(), current : staff };\n                sessionStorage.setItem(staffMemberKey, JSON.stringify(staff));\n                sessionStorage.setItem('staffId', staff.id);\n                intercomService.setStaffMember(staff.names[0].text, staff.id, staff.createdAt);\n                $rootScope.$emit('ss:staffMemberChanged', data);\n            },\n            openMemberSelector: function(){\n                var modal = $uibModal.open({\n                    templateUrl: 'main/chooseStaffMemberForm.html',\n                    controller: 'ChooseStaffMemberFormController',\n                    controllerAs: 'vm',\n                    animation: false,\n                    bindToController: true\n                });\n            },\n            checkMemberSelected: function (store) {\n                var id = this.getCurrentStaffMember().id;\n                if(id && _.some(store.staff,['id', id])) return;\n                this.clearCurrentStaffMember();\n                $timeout(this.openMemberSelector, 500);\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.staff')\n  .config(function($stateProvider) {\n    $stateProvider\n      .state('staff', {\n        url: '/staff',\n        templateUrl: 'staff/staff.html',\n        controller: 'StaffController',\n        controllerAs: 'staff',\n        authenticate: true,\n          parent: 'main'\n    })\n  });\n","'use strict';\n\n(function(){\n\n  angular.module('ssNg.staff').controller('StaffController', ['staffService', '$window', '$location', 'Auth', 'storeService', '_', StaffController]);\n\n  function StaffController(staffService, $window, $location, Auth, storeService, _) {\n\n      var that = this;\n\n      that.newMember = {};\n      that.organisationId = null;\n      that.storeId = null;\n\n      function listStores() {\n          return storeService.listStores({organisationId: that.organisationId }).then(function(res){\n              that.stores = res;\n          });\n      }\n\n      Auth.getStoreAsync().then(function(res){\n          that.storeName = res.names[0].text;\n          that.organisationId = res.organisation.id;\n          that.storeId = res.id;\n          listStaff();\n          listStores();\n      });\n\n      function listStaff(){\n          return staffService.listStaff({organisationId: that.organisationId, storeId : that.storeId }).then(function(res){\n              that.list = res;\n          });\n      }\n\n      that.getStore = function(storeId){\n            return _.find(that.stores, ['id', storeId]);\n      };\n\n      that.createStaff = function(){\n          var command = {\n              names : [{ text : that.newMember.name }],\n              organisationId : that.organisationId,\n              storeId : that.storeId\n          };\n        staffService.createStaff(command).then(function(res){\n            that.newMember = {};\n            listStaff();\n            Auth.reLoadUser();\n        })\n      };\n  }\n\n})();\n","'use strict';\n\nangular.module('ssNg.snapIns', []);\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.snapIns').factory('snapInService', ['apiRoot', '$http', '$window', '$rootScope', '$q', SnapInService]);\n\n    function SnapInService(apiRoot, $http, $window, $rootScope, $q) {\n        var root = apiRoot + '/destinations/';\n        return {\n            add : function(name){\n                $window.location.href = root + 'add/' + name;\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.snapIns')\n    .config(function($stateProvider) {\n        $stateProvider\n            .state('snap-ins', {\n                url: '/snap-ins',\n                templateUrl: 'snap-ins/snap-ins.html',\n                controller: 'SnapInsController',\n                controllerAs: 'snapins',\n                authenticate: true,\n                parent: 'main'\n            })\n    });","'use strict';\n(function () {\n\n    angular.module('ssNg.snapIns').controller('SnapInsController', ['$rootScope', '$state', '$location', 'Auth', SnapInsController]);\n\n    function SnapInsController($rootScope, $state, $location, Auth) {\n\n\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.search', ['algoliasearch']);","angular.module('ssNg.search').directive('searchBox', ['$http', '_', '$location', 'searchService',  function ($http, _, $location, searchService) {\n\n    return {\n        restrict: 'E',\n        templateUrl: 'search/searchBox.html',\n        scope: {\n            selectedEvent: '=',\n            placeHolder: '=?',\n            hideButton: '=?',\n            cssClass: '=?',\n            categories: '=?',\n            includeExternalPlaces: '=?'\n        },\n        controller: ['$scope', '$rootScope', '$state', function ($scope, $rootScope, $state) {\n\n            $scope.placeHolder = $scope.placeHolder || 'enter product or description to start...';\n\n            $scope.aid = null;\n\n            $scope.scount = 0;\n\n            $scope.searchTerm = $location.search().term;\n\n            $scope.$watch('searchTerm', function(newVal, oldVal) {\n                var isResultsPageAndSearchCleared = oldVal && !newVal && $state.current.name === 'search-results';\n                if(isResultsPageAndSearchCleared){\n                    return $state.go('news');\n                }\n                if(!newVal) return;\n                searchService.search(newVal);\n                $state.go('search-results');\n                $location.search({ term : newVal});\n            });\n        }]\n    }\n}]);\n\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.search').factory('searchService', ['algolia', '$window', '$rootScope', 'Auth', SearchService]);\n\n    function SearchService(algolia, $window, $rootScope, Auth) {\n\n        var client = algolia.Client(\"M96FY1SE39\", '0f7f4674e053a9d6fe0c5fdd8c7b30f4');\n        var index = null;\n\n        Auth.getStoreAsync().then(function(res){\n            index = client.initIndex(res.organisation.productSearchIndex);\n        });\n\n        return {\n            results : [],\n            search : function(term){\n                var that = this;\n                if(!term) {\n                    return that.results = [];\n                }\n                index.search(term).then(function searchSuccess(content) {\n                       that.results =  content.hits;\n                    }, function searchFailure(err) {\n                        console.log(err);\n                });\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.search')\n    .config(function($stateProvider) {\n        $stateProvider\n            .state('search-results', {\n                url: '/search-results',\n                templateUrl: 'search/results.html',\n                controller: 'ResultsController',\n                controllerAs: 'vm',\n                authenticate: true,\n                parent: 'main',\n                reloadOnSearch: false\n            })\n    });","'use strict';\n\n(function () {\n\n\n    angular.module('ssNg.search').controller('ResultsController', ['searchService', 'feedbackService', 'requestService','requestFeedbackService', 'featureService', ResultsController]);\n\n    function ResultsController(searchService, feedbackService, requestService, requestFeedbackService, featureService) {\n\n        var vm = this;\n\n        vm.search = searchService;\n\n        vm.featureService = featureService;\n\n        vm.openFeedback = feedbackService.openFeedback;\n\n        vm.openRequest = requestService.openRequest;\n        \n        vm.openRequestFeedback = requestFeedbackService.openRequestFeedback;\n\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.requests', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n(function () {\n\n    angular.module('ssNg.requests').controller('requestFormController', ['$rootScope', '$state', '$location', 'requestService', 'product', '$uibModalInstance', RequestFormController]);\n\n    function RequestFormController($rootScope, $state, $location, requestService, product, $uibModalInstance) {\n        var vm = this;\n        vm.product = product;\n\n        vm.productTypes = [\n            { name : 'Shirt', id : 11},\n            { name : 'Pants', id : 11},\n            { name : 'Jacket', id : 12},\n            { name : 'Accessories', id : 12},\n            { name : 'Footwear', id : 12},\n            { name : 'Shorts', id : 12},\n            { name : 'T-Shirts', id : 12},\n            { name : 'Suit Jackets', id : 12},\n        ];\n        vm.colours = [\n            {id: 1, name: 'Any'},\n            {name: 'red', id: 11},\n            {name: 'green', id: 12},\n            {name: 'blue', id: 13}\n            ];\n        vm.sizes = [\n            {id: 1, name: 'One Size'},\n            {id: 11, name: 'XS'},\n            {name: 'S', id: 12},\n            {name: 'M', id: 13},\n            {name: 'L', id: 14},\n            {name: 'XL', id: 15},\n            {name: 'XXL', id: 16},\n            {name: 'XXXL', id: 17}];\n\n        vm.request = {\n            sku: product.sku\n        };\n\n        vm.selectedProductType = vm.productTypes[0];\n        vm.selectedColour = vm.colours[0];\n        vm.selectedSize = vm.sizes[0];\n\n        vm.createRequest = function () {\n            vm.request.colour = vm.selectedColour.name;\n            vm.request.size = vm.selectedSize.name;\n            vm.request.productType = vm.selectedProductType.name;\n            requestService.createRequest(vm.request).then(function (res) {\n                $state.go('news');\n                $uibModalInstance.close();\n            });\n        };\n\n        vm.dateOptions = {\n            formatYear: 'yy',\n            maxDate: new Date(2020, 5, 22),\n            minDate: new Date(),\n            startingDay: 1\n        };\n\n    }\n\n})();","'use strict';\n\n(function () {\n\n    angular.module('ssNg.requests').factory('requestService', ['apiRoot', '$http', '$uibModal', RequestService]);\n\n    function RequestService(apiRoot, $http, $uibModal) {\n        var root = apiRoot + '/requests/';\n        return {\n            tags : ['fit', 'style', 'size', 'colour', 'quality'],\n            createRequest : function(command){\n                return $http({ url : root, method: 'POST', data: command}).then(function(res){\n                   return res.data;\n                })\n            },\n            openRequest : function(product){\n                $uibModal.open({\n                    templateUrl : 'requests/requestForm.html',\n                    controller: 'requestFormController',\n                    controllerAs: 'vm',\n                    resolve : {\n                        product : product\n                    }\n                });\n            }\n        }\n    }\n\n})();\n","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('requestFeedbackLabels', FeedbackLabels);\n    function FeedbackLabels() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                requestFeedback: '='\n            },\n            templateUrl: 'requestFeedback/requestFeedbackLabels.html',\n            controller: [function () {\n                var vm = this;\n            }]\n        }\n    }\n})();","'use strict';\n\nangular.module('ssNg.requestFeedback', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n(function () {\n\n    angular.module('ssNg.requestFeedback').controller('requestFeedbackFormController', ['$rootScope', '$state', '$location', 'requestFeedbackService', 'product', '$uibModalInstance', requestFeedbackFormController]);\n\n    function requestFeedbackFormController($rootScope, $state, $location, requestFeedbackService, product, $uibModalInstance) {\n        var vm = this;\n\n        vm.product = product;\n\n        vm.requestFeedback = {\n            sku : product.sku,\n            tags : []\n        };\n\n        vm.createRequestFeedback = function(){\n            requestFeedbackService.createRequestFeedback(vm.requestFeedback).then(function(res){\n                $state.go('news');\n                $uibModalInstance.close();\n            });\n        };\n\n        vm.tags = requestFeedbackService.tags;\n\n        vm.toggleCategory = function toggleCategory(category) {\n            var index = vm.requestFeedback.tags.indexOf(category);\n            if (index > -1) return vm.requestFeedback.tags.splice(index, 1);\n            vm.requestFeedback.tags.push(category);\n        };\n    }\n\n})();","'use strict';\n\n(function () {\n\n    angular.module('ssNg.requestFeedback').factory('requestFeedbackService', ['apiRoot', '$http', '$uibModal', FeedbackService]);\n\n    function FeedbackService(apiRoot, $http, $uibModal) {\n        var root = apiRoot + '/requestFeedback/';\n        return {\n            tags : ['price','fit', 'style', 'size', 'colour', 'quality'],\n            createRequestFeedback : function(command){\n                return $http({ url : root, method: 'POST', data: command}).then(function(res){\n                   return res.data;\n                })\n            },\n            openRequestFeedback : function(product){\n                $uibModal.open({\n                    templateUrl : 'requestFeedback/requestFeedbackForm.html',\n                    controller: 'requestFeedbackFormController',\n                    controllerAs: 'vm',\n                    resolve : {\n                        product : product\n                    }\n                });\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.profiles', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.profiles').factory('profileService', ['apiRoot', '$http', '$window', '$rootScope', '$q', 'Auth', ProfileService]);\n\n    function ProfileService(apiRoot, $http, $window, $rootScope, $q, Auth) {\n        var root = apiRoot + '/profiles/';\n        return {\n            uploadImage : function(command){\n                return $http({ url : root, method: 'POST', data: command}).then(function(res){\n                   return res.data;\n                })\n            }\n        }\n    }\n\n})();\n","'use strict';\n(function () {\n\n    angular.module('ssNg.profiles').controller('profileController', ['$rootScope', '$state', '$location', 'Auth', 'profileService', 'product', profileController]);\n\n    function profileController($rootScope, $state, $location, Auth, profileService) {\n        var vm = this;\n\n    }\n\n})();","'use strict';\n\nangular.module('ssNg.products', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\nangular.module('ssNg.products')\n    .config(function($stateProvider) {\n        $stateProvider\n            .state('product', {\n                url: '/products/:sku',\n                templateUrl: 'products/product.html',\n                controller: 'ProductController',\n                controllerAs: 'vm',\n                authenticate: true,\n                parent: 'main'\n            })\n    });","'use strict';\n\n(function () {\n\n    angular.module('ssNg.products').factory('productService', ['apiRoot', '$http', '$window', '$rootScope', '$q', 'Auth', ProductService]);\n\n    function ProductService(apiRoot, $http, $window, $rootScope, $q, Auth) {\n        var root = apiRoot + '/products/';\n\n        var sizes = {\n            XS : 1,\n            S : 2,\n            M : 3,\n            L : 4,\n            XL : 5,\n            XXL : 6,\n            XXXL : 7\n        };\n\n        return {\n            getProduct: function(sku){\n                return $http({ url : root + sku, method: 'GET'}).then(function(res){\n                    return res.data;\n                })\n            },\n            sortSize: function(sizeA, sizeB){\n                var sizeAIsNumber = isNaN(sizeA);\n                var sizeBIsNumber = isNaN(sizeB);\n                if(!sizeAIsNumber && !sizeBIsNumber) return sizeA > sizeB;\n                if(sizeAIsNumber || sizeBIsNumber) return true;\n                return sizes[sizeA] > sizes[sizeB];\n            }\n        }\n    }\n\n})();\n","'use strict';\n(function () {\n\n    angular.module('ssNg.products').controller('ProductController', ['$state', 'productService', 'newsService', '$stateParams', 'feedbackService', 'requestService', 'featureService', '$location', ProductController]);\n\n    function ProductController($state, productService, newsService, $stateParams, feedbackService, requestService, featureService, $location) {\n        let vm = this;\n\n        productService.getProduct($stateParams.sku).then(function (res) {\n            vm.product = res;\n            let query = $location.search();\n            if(query.modal == 'feedback'){\n                feedbackService.openFeedback(res);\n            }\n        });\n\n        vm.openFeedback = feedbackService.openFeedback;\n        vm.openRequest = requestService.openRequest;\n        vm.featureService = featureService;\n\n        vm.activities = [];\n\n        vm.sortSize = productService.sortSize;\n\n        vm.update = function () {\n            vm.params = {store: vm.currentStore, tags: vm.currentTags, recipientId: $stateParams.sku};\n            newsService.getLatest(vm.params).then(function (res) {\n                vm.activities = res;\n                vm.firstLoad = true;\n            });\n        };\n        vm.update();\n    }\n\n})();","'use strict';\n\nangular.module('ssNg.notifications', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\nangular.module('ssNg.notifications')\n    .config(function($stateProvider) {\n        $stateProvider\n            .state('notifications', {\n                url: '/notifications',\n                templateUrl: 'notifications/list.html',\n                controller: 'NotificationListController',\n                controllerAs: 'vm',\n                bindToController: true,\n                authenticate: true,\n                parent: 'main'\n            })\n    });","'use strict';\n(function () {\n\n    angular.module('ssNg.notifications').controller('NotificationListController', ['notificationService', 'storeService', '$timeout', '_', '$state', NotificationListController]);\n\n    function NotificationListController(notificationService, storeService, $timeout, _, $state) {\n        var vm = this;\n\n        vm.getNotifications = notificationService.getNotifications;\n\n        if($state.current.name == 'notifications') {\n            notificationService.markAsRead();\n        }\n        vm.getShortName = storeService.getShortName;\n    }\n\n})();","'use strict';\n\n(function () {\n\n    angular.module('ssNg.notifications').factory('notificationService', ['apiRoot', '$http', '_', '$rootScope','staffService', 'messaging', '$timeout', NotificationService]);\n\n    function NotificationService(apiRoot, $http, _, $rootScope, staffService, messaging, $timeout) {\n        var root = apiRoot + '/notifications/';\n\n        var unread = [];\n\n        var notifications = [];\n\n        function unsubscribe(id) {\n            //  messaging.client.unsubscribe({\n            //     channel : messaging.getChannelKey('notification', 'created', id)\n            // });\n        }\n\n        function subscribe() {\n            //var channelKey = messaging.getChannelKey('notification', 'created', staffService.getCurrentStaffMember().id);\n            //console.log('CHANNEL KEY', channelKey);\n            // messaging.client.subscribe({\n            //     channel: channelKey,\n            //     message: function (message, envelope, channelOrGroup, time, channel) {\n            //         $rootScope.$apply(unread.unshift(message));\n            //         $rootScope.$apply(notifications.unshift(message));\n            //     }\n            // });\n        }\n\n        var service = {\n            getNotifications : function () {\n                return notifications;\n            },\n            getUnread : function(){\n                return unread || []\n            },\n            getLatest: function (staffId) {\n                return $http({url: root + staffId, method: 'GET', params: { hydrate : true }}).then(function (res) {\n                    var notifications = res.data;\n                    unread = _.filter(notifications, ['read', false]);\n                    return notifications;\n                })\n            },\n            markAsRead: function () {\n                return $http({\n                    url: root + 'mark-as-read', method: 'PUT',\n                    data: {notificationIds: _.map(unread, 'id')}\n                }).then(function (res) {\n                    $timeout(function(){\n                        _.forEach(notifications, function (x) {\n                            x.read = true;\n                        });\n                        unread = [];\n                    }, 3000);\n                })\n            }\n        };\n\n        function loadNotifications() {\n            service.getLatest(staffService.getCurrentStaffMember().id).then(function (res) {\n                notifications = res;\n            });\n        }\n        loadNotifications();\n\n        $rootScope.$on('ss:staffMemberChanged', function(event, data){\n            if(data.previous && data.previous.id) unsubscribe(data.previous.id);\n            subscribe(data.current.id);\n            loadNotifications()\n        });\n\n        return service;\n    }\n\n})();\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.profiles').factory('newsService', ['apiRoot', '$http', '_', NewsService]);\n\n    function NewsService(apiRoot, $http, _) {\n        var root = apiRoot + '/news/';\n\n        //on message receipt, put it into the current bucket(s) check if its been read (news.getUnread())\n        //when that bucket is viewed zero out the unread posts after n seconds (news.setRead(activityIds)\n        //send a message to the server with what has been read (news.setRead(activityIds))\n        //items with an unread state will have a special class\n        var unread = {};\n\n        function incrementUnread(activities) {\n            _.forEach(activities, function (activity) {\n                for (var store in unread.stores) {\n                    if (!unread.stores.hasOwnProperty(store)) continue;\n                    if (store === activity.store.toLowerCase() && !activity.read) unread.stores[store]++;\n                }\n                for (var tag in unread.tags) {\n                    if (!unread.tags.hasOwnProperty(tag)) continue;\n                    if (activity.tags.indexOf(tag) > -1 && !activity.read) unread.tags[tag]++;\n                }\n            });\n        }\n\n        return {\n            like: function (activityId) {\n                return $http({url: root + activityId + '/like', method: 'PUT'}).then(function (res) {\n                    return res.data;\n                })\n            },\n            getLatest: function (command) {\n                var that = this;\n                return $http({url: root, method: 'GET', params: command}).then(function (res) {\n                    return res.data;\n                })\n            },\n            markAsRead: function (activities) {\n                return $http({url: root + 'mark-as-read', method: 'PUT', data: {activityIds: _.map(activities, 'id')}}).then(function (res) {\n                    _.forEach(activities, function (x) {\n                        x.read = true;\n                    });\n                    return activities;\n                })\n            },\n            getUnreadCounts: function () {\n                return unread;\n            },\n            // reloadUnread: function () {\n            //     return $http({url: root + 'unread-counts', method: 'GET'}).then(function (res) {\n            //         unread = res.data;\n            //     });\n            // },\n            incrementUnread: incrementUnread\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.news', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n\nangular.module('ssNg.news')\n  .config(function($stateProvider) {\n\n      $stateProvider\n          .state('news', {\n              url: '/',\n              params: {\n                  store: null,\n                  tag: null\n              },\n              templateUrl: 'news/news.html',\n              controller: 'NewsController',\n              controllerAs: 'vm',\n              authenticate: true,\n              parent: 'main'\n          })\n  });\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.news').controller('NewsController',\n        ['Auth', '$window', 'messaging', '$scope', 'newsService', 'staffService', '$stateParams', '$state', '_', 'storeService', 'feedbackService', NewsController]);\n\n\n    function NewsController(Auth, $window, messaging, $scope, newsService, staffService, $stateParams, $state,_, storeService, feedbackService) {\n\n\n        var vm = this;\n\n        vm.activities = [];\n\n        vm.firstLoad = false;\n\n        vm.stateParams = $stateParams;\n\n        vm.staffMember = staffService.getCurrentStaffMember;\n\n        vm.getShortName = storeService.getShortName;\n\n        vm.tags = feedbackService.tags;\n\n        Auth.getStoreAsync().then(function (res) {\n            vm.stores = res.stores;\n            vm.stores.unshift({names: [{text: 'All Stores'}], id: null});\n        });\n\n        vm.currentStore = null;\n\n        vm.currentTags = [];\n\n        vm.toggleCategory = function toggleCategory(category) {\n            var index = vm.currentTags.indexOf(category);\n            if (index > -1) {\n                vm.currentTags.splice(index, 1);\n            } else {\n                vm.currentTags.push(category);\n            }\n            vm.update();\n        };\n\n        vm.params = {};\n\n        vm.isCompletelyEmpty = function () {\n            return Object.keys(vm.params.tags).length === 0 && !vm.params.store;\n        };\n\n        vm.update = function () {\n            vm.params = {storeId: vm.currentStore ? vm.currentStore.id : null, tags: vm.currentTags};\n            newsService.getLatest(vm.params).then(function (res) {\n                vm.activities = res;\n                vm.firstLoad = true;\n            });\n        };\n\n        vm.status = {\n            isCustomHeaderOpen: false,\n            isFirstOpen: true,\n            isFirstDisabled: false\n        };\n        vm.openFeedback = feedbackService.openFeedback;\n\n        vm.update();\n\n\n        // messaging.client.subscribe({\n        //     channel: messaging.getChannelKey('activity', 'created'),\n        //     message: function (message, envelope, channelOrGroup, time, channel) {\n        //         if(staffService.getCurrentStaffMember().id == message.subject.id) return;\n        //         $scope.$apply(vm.activities.unshift(message));\n        //     }\n        // });\n        //\n        // messaging.client.subscribe({\n        //     channel: messaging.getChannelKey('activity', 'updated'),\n        //     message: function (message, envelope, channelOrGroup, time, channel) {\n        //         var activity = _.find(vm.activities, ['id', message.id]);\n        //         if (!activity) return console.log('cant find message');\n        //         $scope.$apply(angular.copy(message, activity));\n        //     }\n        // });\n    }\n})();\n","'use strict';\n(function () {\n\n    angular.module('ssNg').controller('PublicController', ['$http', 'featureService', PublicController]);\n\n    function PublicController($http, featureService) {\n        var vm = this;\n        vm.$http = $http;\n        vm.isEnabled = featureService.isEnabled;\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg')\n    .config(function ($stateProvider) {\n        $stateProvider\n            .state('public', {\n                url: '/public',\n                templateUrl: 'main/public.html',\n                controller: 'PublicController',\n                controllerAs: 'vm'\n            })\n            .state('main', {\n                templateUrl: 'main/main.html',\n                authenticate: true,\n                controller: 'MainController',\n                controllerAs: 'vm'\n            }).state('login', {\n                url: '/login',\n                templateUrl: 'main/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm'\n            }).state('weekly-report', {\n            url: '/weekly-report',\n            templateUrl: 'main/weeklyReport.html'\n        })\n        });\n","'use strict';\n(function () {\n\n    angular.module('ssNg').controller('MainController', ['$http', 'feedbackService', 'newsService', MainController]);\n\n    function MainController($http, feedbackService, newsService) {\n        var vm = this;\n\n        vm.$http = $http;\n\n        vm.tags = feedbackService.tags;\n\n        // vm.getUnread = function(command){\n        //     var key = Object.keys(command)[0];\n        //     var section = newsService.getUnreadCounts()[key];\n        //     if(!section) return 0;\n        //     return section[command[key]];\n        // }\n    }\n})();","'use strict';\n\n\n(function(){\n\n    angular.module('ssNg')\n        .controller('LoginController', LoginController);\n\n    function LoginController(Auth, $state) {\n    }\n\n})();\n","'use strict';\n(function () {\n\n    angular.module('ssNg').controller('ChooseStaffMemberFormController', ['staffService', 'Auth', '_', ChooseStaffMemberFormController]);\n\n    function ChooseStaffMemberFormController(staffService, Auth, _) {\n\n        var vm = this;\n\n        staffService.listStaff({organisationId: Auth.getCurrentUser().organisation.id}).then(function (res) {\n            vm.staff = res;\n        });\n\n        vm.setStaffMember = function (staffMember) {\n            staffService.setCurrentStaffMember(staffMember);\n            return Auth.reLoadUser().then(function (res) {\n                vm.$dismiss();\n            });\n        };\n\n        vm.createStaff = function () {\n            var command = {\n                names: [{text: vm.fullName}],\n                organisationId: Auth.getCurrentUser().organisation.id,\n                storeId: Auth.getCurrentUser().id\n            };\n            var id;\n            staffService.createStaff(command).then(function (res) {\n                id = res.id;\n                vm.fullName = null;\n                return Auth.reLoadUser();\n            }).then(function (res) {\n                var staff = _.find(res.staff, ['id', id]);\n                staffService.setCurrentStaffMember(staff);\n                vm.$close();\n            })\n        }\n\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg.insights', [\n  'ssNg.auth',\n  'chart.js',\n  'ui.router'\n]);\n","'use strict';\n\n(function () {\n\n    angular.module('ssNg.insights').factory('insightService', ['apiRoot', '$http', '$window', '$rootScope', '$q', 'Auth', InsightService]);\n\n    function InsightService(apiRoot, $http, $window, $rootScope, $q, Auth) {\n        var root = apiRoot + '/insights/';\n        return {\n            getTopStaff: function () {\n                return $http({url: root + 'top-staff', method: 'GET'}).then(function (res) {\n                    return res.data;\n                });\n            },\n            getTopStores: function () {\n                return $http({url: root + 'top-stores', method: 'GET'}).then(function (res) {\n                    return res.data;\n                });\n            },\n            getTopLineStats: function () {\n                return {};\n                // return $http({ url : root + sku, method: 'GET'}).then(function(res){\n                //     return res.data;\n                // })\n            }\n        }\n    }\n\n})();\n","'use strict';\n\nangular.module('ssNg')\n    .directive('insightsDashboard', function () {\n        return {\n            restrict: 'E',\n            templateUrl: 'insights/dashboard.html',\n            controllerAs: 'vm',\n            scope: {},\n            controller: ['insightService', function (insightService) {\n                var vm = this;\n\n                insightService.getTopStaff().then(function (res) {\n                    vm.topStaff = {\n                        data: [_.map(res, function (item) {\n                            return item.quantity;\n                        })],\n                        labels: _.map(res, function (item) {\n                            return item.staffMember.names[0].text.substring(0, 8)\n                        })\n                    }\n                });\n\n                insightService.getTopStores().then(function (res) {\n                    vm.topStores = {\n                        data: [_.map(res, function (item) {\n                            return item.quantity;\n                        })],\n                        labels: _.map(res, function (item) {\n                            return item.store.names[0].text.substring(0, 7) + '\\'';\n                        })\n                    }\n                });\n\n                vm.stats = {\n                    feedbackByStore: {\n                        labels: ['Newmarket', 'Wellington'],\n                        data: [\n                            [3, 6]\n                        ]\n                    },\n                    feedbackByTag: {\n                        labels: ['Fit', 'Style', 'Size', 'Colour', 'Quality'],\n                        data: [[5, 2, 8, 2, 1]]\n                    }\n                }\n            }]\n        }\n    });","'use strict';\n\n(function () {\n    angular.module('ssNg').directive('feedbackLabels', FeedbackLabels);\n    function FeedbackLabels() {\n        return {\n            restrict: 'E',\n            scope: {},\n            controllerAs: 'vm',\n            bindToController: {\n                feedback: '='\n            },\n            templateUrl: 'feedback/feedbackLabels.html',\n            controller: [function () {\n                var vm = this;\n            }]\n        }\n    }\n})();","'use strict';\n\nangular.module('ssNg.feedback', [\n  'ssNg.auth',\n  'ui.router'\n]);\n","'use strict';\n(function () {\n\n    angular.module('ssNg.feedback').controller('feedbackFormController', ['$rootScope', '$state', '$location', 'feedbackService', 'product', '$uibModalInstance', feedbackFormController]);\n\n    function feedbackFormController($rootScope, $state, $location, feedbackService, product, $uibModalInstance) {\n        var vm = this;\n\n        vm.product = product;\n\n        vm.feedback = {\n            sku : product.sku,\n            tags : []\n        };\n\n        vm.createFeedback = function(){\n            feedbackService.createFeedback(vm.feedback).then(function(res){\n                $state.go('news');\n                $uibModalInstance.close();\n            });\n        };\n\n        vm.tags = feedbackService.tags;\n\n        vm.toggleCategory = function toggleCategory(category) {\n            var index = vm.feedback.tags.indexOf(category);\n            if (index > -1) return vm.feedback.tags.splice(index, 1);\n            vm.feedback.tags.push(category);\n        };\n    }\n\n})();","'use strict';\n\n(function () {\n\n    angular.module('ssNg.feedback').factory('feedbackService', ['apiRoot', '$http', '$uibModal', FeedbackService]);\n\n    function FeedbackService(apiRoot, $http, $uibModal) {\n        var root = apiRoot + '/feedback/';\n        return {\n            tags : ['fit', 'style', 'size', 'colour', 'quality'],\n            createFeedback : function(command){\n                return $http({ url : root, method: 'POST', data: command}).then(function(res){\n                   return res.data;\n                })\n            },\n            openFeedback : function(product){\n\n                $uibModal.open({\n                    templateUrl : 'feedback/feedbackForm.html',\n                    controller: 'feedbackFormController',\n                    controllerAs: 'vm',\n                    resolve : {\n                        product : product\n                    }\n                });\n            }\n        }\n    }\n\n})();\n"]}